<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd ">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:property-placeholder location="classpath*:application-jdbc.properties"/>
	
	<!-- 数据源配置,使用应用内的Tomcat JDBC连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="acquireIncrement" value="5"/>
        <property name="idleConnectionTestPeriod" value="3000"/>
        <property name="checkoutTimeout" value="3000"/>
        <property name="maxPoolSize" value="80"/>
        <property name="minPoolSize" value="1"/>
        <property name="maxStatements" value="6000"/>
        <property name="initialPoolSize" value="5"/>
	</bean>
	
	
	<!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>


    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven />

    <!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="com.emar.yiqifa.report.dao.entity,com.emar.yiqifa.report.service.dto" />
    	<property name="mapperLocations" value="classpath*:com/emar/yiqifa/report/dao/**/*Mapper.xml" />
    	<property name="configLocation" value="classpath:Mybatis_Configuration.xml"/>  
    </bean> 

	<!-- SqlSessionTemplate将会保证使用的SqlSession是和当前Spring的事务相关的。 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">  
	    <constructor-arg index="0" ref="sqlSessionFactory"/>  
	</bean>
	 
    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.emar.yiqifa.report.dao.mapper" />
    </bean>
	<context:component-scan base-package="com.emar.yiqifa.report.dao" />
	
</beans>
